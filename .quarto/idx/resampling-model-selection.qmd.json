{"title":"Model Selection and Regularization - R Version","markdown":{"yaml":{"title":"Model Selection and Regularization - R Version","format":"html","toc":true,"code-fold":true},"headingText":"Overview","containsRefs":false,"markdown":"\n\n\nIn this guided lesson, we’ll use the **Ames Housing** dataset to demonstrate model selection and regularization.\n\nWe’ll cover:\n\n1. Splitting data into training and testing sets  \n2. Performing **stepwise regression** with cross-validation  \n3. Running **Ridge** and **Lasso** regression, and visualizing how λ affects RMSE and model complexity  \n4. Exploring **Elastic Net**, varying α to balance Ridge and Lasso  \n5. Comparing all models on the test set\n\n---\n\n## Step 0: Setup and Data Preparation\n\nWe’ll use a reduced set of variables for speed and clarity.\n\n```{r}\n# Suppress messages and warnings globally\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\n\nlibrary(tidyverse)\nlibrary(caret)\nlibrary(glmnet)\nlibrary(AmesHousing)\nlibrary(GGally)\n\nset.seed(123)\n\n# Load data and split into 70% training, 30% testing\names <- make_ordinal_ames() %>% mutate(id = row_number())\ntrain <- ames %>% sample_frac(0.7)\ntest  <- anti_join(ames, train, by = \"id\")\n\n# Select a manageable subset of predictors\nkeep <- c(\"Sale_Price\", \"Bedroom_AbvGr\", \"Year_Built\", \"Mo_Sold\", \"Lot_Area\",\n          \"Street\", \"Central_Air\", \"First_Flr_SF\", \"Second_Flr_SF\", \"Full_Bath\",\n          \"Half_Bath\", \"Fireplaces\", \"Garage_Area\", \"Gr_Liv_Area\", \"TotRms_AbvGrd\")\n\ntrain <- train %>% select(all_of(keep))\ntest  <- test  %>% select(all_of(keep))\n\n# Convert categorical variables to factors\ntrain <- train %>% mutate(across(c(Street, Central_Air), as.factor))\ntest  <- test %>% mutate(across(c(Street, Central_Air), as.factor))\n```\n\n---\n\n## Step 1: Stepwise Regression with 10-Fold Cross Validation\n\nWe’ll use backward stepwise regression as a traditional benchmark.\n\n```{r}\nctrl <- trainControl(method = \"cv\", number = 10)\n\nstep_model <- train(\n  Sale_Price ~ ., data = train,\n  method = \"lmStepAIC\",\n  trControl = ctrl,\n  trace = FALSE,\n  direction = \"backward\"\n)\n\n# Evaluate on the test set\nstep_pred <- predict(step_model, newdata = test)\nstep_perf <- postResample(step_pred, test$Sale_Price)\nstep_perf\n\n# Visualize predicted vs observed\nggplot(data.frame(obs = test$Sale_Price, pred = step_pred), aes(obs, pred)) +\n  geom_point(alpha = 0.6) +\n  geom_abline(linetype = \"dashed\", color = \"red\") +\n  labs(title = \"Stepwise Regression: Observed vs Predicted\",\n       x = \"Observed Price\", y = \"Predicted Price\")\n```\n\n**Note:**  \nStepwise regression is intuitive and fast, but it can be unstable.\n\nStepwise regression (forward, backward, or both) selects predictors one at a time based on how much they improve a criterion (like AIC or adjusted R²).\n\n\n---\n\n## Step 2: Ridge and Lasso Regression\n\nRidge and Lasso both shrink coefficients, but in different ways:\n- Ridge shrinks all coefficients toward zero.\n- Lasso can set some coefficients *exactly* to zero, performing variable selection.\n\n```{r}\nx_train <- model.matrix(Sale_Price ~ ., train)[, -1]\ny_train <- train$Sale_Price\nx_test  <- model.matrix(Sale_Price ~ ., test)[, -1]\ny_test  <- test$Sale_Price\n\nset.seed(123)\ncv_ridge <- cv.glmnet(x_train, y_train, alpha = 0, nfolds = 10)\ncv_lasso <- cv.glmnet(x_train, y_train, alpha = 1, nfolds = 10)\n```\n\n### Visualizing RMSE and Model Complexity\n\n```{r}\nbuild_path_df <- function(cvfit, label) {\n  fit <- cvfit$glmnet.fit\n  tibble(\n    lambda = fit$lambda,\n    log_lambda = log(fit$lambda),\n    RMSE = sqrt(cvfit$cvm),\n    nonzero = colSums(abs(fit$beta) > 0),\n    Model = label\n  )\n}\n\nridge_df <- build_path_df(cv_ridge, \"Ridge\")\nlasso_df <- build_path_df(cv_lasso, \"Lasso\")\ndf <- bind_rows(ridge_df, lasso_df)\n\nggplot(df, aes(log_lambda, RMSE, color = Model)) +\n  geom_line(size = 1) +\n  labs(title = \"RMSE vs log(lambda)\", y = \"Cross-validated RMSE\", x = \"log(lambda)\")\n\nggplot(df, aes(log_lambda, nonzero, color = Model)) +\n  geom_line(size = 1) +\n  labs(title = \"Number of Nonzero Coefficients vs log(lambda)\",\n       y = \"Number of Nonzero Coefficients\", x = \"log(lambda)\")\n```\n\n**Note:**  \n- Increasing λ increases regularization.  \n- Ridge never eliminates variables, Lasso can.  \n- There’s a sweet spot where RMSE is minimized.\n\n---\n\n## Step 3: Elastic Net (Balancing Ridge and Lasso)\n\nElastic Net introduces α to control the mix between Ridge (α = 0) and Lasso (α = 1).\n\n```{r}\nalpha_grid <- seq(0, 1, by = 0.25)\n\nelastic_results <- map_df(alpha_grid, function(a) {\n  cv_fit <- cv.glmnet(x_train, y_train, alpha = a, nfolds = 10)\n  tibble(\n    alpha = a,\n    best_lambda = cv_fit$lambda.min,\n    best_RMSE = sqrt(min(cv_fit$cvm)),\n    nonzero = sum(abs(coef(cv_fit, s = \"lambda.min\")[-1]) > 0)\n  )\n})\n\nelastic_results\n```\n\n### Visualizing α Effects\n\n```{r}\nggplot(elastic_results, aes(alpha, best_RMSE)) +\n  geom_line() + geom_point(size = 2) +\n  labs(title = \"Elastic Net: Best RMSE vs Alpha\",\n       y = \"Best Cross-validated RMSE\", x = \"Alpha\")\n\nggplot(elastic_results, aes(alpha, nonzero)) +\n  geom_line() + geom_point(size = 2) +\n  labs(title = \"Elastic Net: Model Size vs Alpha\",\n       y = \"Number of Nonzero Coefficients\", x = \"Alpha\")\n```\n\n**Note:**  \nElastic Net combines the strengths of Ridge and Lasso:\n- Ridge for stability.\n- Lasso for sparsity.\n- Often performs best at intermediate α values.\n\n---\n\n## Step 4: Comparing All Models on the Test Set\n\nWe’ll compare Stepwise, Ridge, Lasso, and the best Elastic Net.\n\n```{r}\nridge_pred <- predict(cv_ridge, newx = x_test, s = \"lambda.min\")\nlasso_pred <- predict(cv_lasso, newx = x_test, s = \"lambda.min\")\n\nbest_alpha <- elastic_results %>% arrange(best_RMSE) %>% slice(1) %>% pull(alpha)\ncv_en_best <- cv.glmnet(x_train, y_train, alpha = best_alpha, nfolds = 10)\nelastic_pred <- predict(cv_en_best, newx = x_test, s = \"lambda.min\")\n\ncompare_tbl <- bind_rows(\n  Stepwise = as_tibble_row(postResample(step_pred, test$Sale_Price)),\n  Ridge = as_tibble_row(postResample(ridge_pred, y_test)),\n  Lasso = as_tibble_row(postResample(lasso_pred, y_test)),\n  Elastic = as_tibble_row(postResample(elastic_pred, y_test)),\n  .id = \"Model\"\n)\n\ncolnames(compare_tbl) <- c(\"Model\", \"RMSE\", \"Rsquared\", \"MAE\")\ncompare_tbl <- compare_tbl %>% arrange(RMSE)\ncompare_tbl\n```\n\n---\n\n## Key Takeaways\n\n- Stepwise selection is simple but can lead to unstable models.  \n- Ridge adds stability via coefficient shrinkage.  \n- Lasso enforces sparsity by removing weak predictors.  \n- Elastic Net balances both effects.  \n- Regularization often produces models that generalize better than purely stepwise ones.\n\n","srcMarkdownNoYaml":"\n\n## Overview\n\nIn this guided lesson, we’ll use the **Ames Housing** dataset to demonstrate model selection and regularization.\n\nWe’ll cover:\n\n1. Splitting data into training and testing sets  \n2. Performing **stepwise regression** with cross-validation  \n3. Running **Ridge** and **Lasso** regression, and visualizing how λ affects RMSE and model complexity  \n4. Exploring **Elastic Net**, varying α to balance Ridge and Lasso  \n5. Comparing all models on the test set\n\n---\n\n## Step 0: Setup and Data Preparation\n\nWe’ll use a reduced set of variables for speed and clarity.\n\n```{r}\n# Suppress messages and warnings globally\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\n\nlibrary(tidyverse)\nlibrary(caret)\nlibrary(glmnet)\nlibrary(AmesHousing)\nlibrary(GGally)\n\nset.seed(123)\n\n# Load data and split into 70% training, 30% testing\names <- make_ordinal_ames() %>% mutate(id = row_number())\ntrain <- ames %>% sample_frac(0.7)\ntest  <- anti_join(ames, train, by = \"id\")\n\n# Select a manageable subset of predictors\nkeep <- c(\"Sale_Price\", \"Bedroom_AbvGr\", \"Year_Built\", \"Mo_Sold\", \"Lot_Area\",\n          \"Street\", \"Central_Air\", \"First_Flr_SF\", \"Second_Flr_SF\", \"Full_Bath\",\n          \"Half_Bath\", \"Fireplaces\", \"Garage_Area\", \"Gr_Liv_Area\", \"TotRms_AbvGrd\")\n\ntrain <- train %>% select(all_of(keep))\ntest  <- test  %>% select(all_of(keep))\n\n# Convert categorical variables to factors\ntrain <- train %>% mutate(across(c(Street, Central_Air), as.factor))\ntest  <- test %>% mutate(across(c(Street, Central_Air), as.factor))\n```\n\n---\n\n## Step 1: Stepwise Regression with 10-Fold Cross Validation\n\nWe’ll use backward stepwise regression as a traditional benchmark.\n\n```{r}\nctrl <- trainControl(method = \"cv\", number = 10)\n\nstep_model <- train(\n  Sale_Price ~ ., data = train,\n  method = \"lmStepAIC\",\n  trControl = ctrl,\n  trace = FALSE,\n  direction = \"backward\"\n)\n\n# Evaluate on the test set\nstep_pred <- predict(step_model, newdata = test)\nstep_perf <- postResample(step_pred, test$Sale_Price)\nstep_perf\n\n# Visualize predicted vs observed\nggplot(data.frame(obs = test$Sale_Price, pred = step_pred), aes(obs, pred)) +\n  geom_point(alpha = 0.6) +\n  geom_abline(linetype = \"dashed\", color = \"red\") +\n  labs(title = \"Stepwise Regression: Observed vs Predicted\",\n       x = \"Observed Price\", y = \"Predicted Price\")\n```\n\n**Note:**  \nStepwise regression is intuitive and fast, but it can be unstable.\n\nStepwise regression (forward, backward, or both) selects predictors one at a time based on how much they improve a criterion (like AIC or adjusted R²).\n\n\n---\n\n## Step 2: Ridge and Lasso Regression\n\nRidge and Lasso both shrink coefficients, but in different ways:\n- Ridge shrinks all coefficients toward zero.\n- Lasso can set some coefficients *exactly* to zero, performing variable selection.\n\n```{r}\nx_train <- model.matrix(Sale_Price ~ ., train)[, -1]\ny_train <- train$Sale_Price\nx_test  <- model.matrix(Sale_Price ~ ., test)[, -1]\ny_test  <- test$Sale_Price\n\nset.seed(123)\ncv_ridge <- cv.glmnet(x_train, y_train, alpha = 0, nfolds = 10)\ncv_lasso <- cv.glmnet(x_train, y_train, alpha = 1, nfolds = 10)\n```\n\n### Visualizing RMSE and Model Complexity\n\n```{r}\nbuild_path_df <- function(cvfit, label) {\n  fit <- cvfit$glmnet.fit\n  tibble(\n    lambda = fit$lambda,\n    log_lambda = log(fit$lambda),\n    RMSE = sqrt(cvfit$cvm),\n    nonzero = colSums(abs(fit$beta) > 0),\n    Model = label\n  )\n}\n\nridge_df <- build_path_df(cv_ridge, \"Ridge\")\nlasso_df <- build_path_df(cv_lasso, \"Lasso\")\ndf <- bind_rows(ridge_df, lasso_df)\n\nggplot(df, aes(log_lambda, RMSE, color = Model)) +\n  geom_line(size = 1) +\n  labs(title = \"RMSE vs log(lambda)\", y = \"Cross-validated RMSE\", x = \"log(lambda)\")\n\nggplot(df, aes(log_lambda, nonzero, color = Model)) +\n  geom_line(size = 1) +\n  labs(title = \"Number of Nonzero Coefficients vs log(lambda)\",\n       y = \"Number of Nonzero Coefficients\", x = \"log(lambda)\")\n```\n\n**Note:**  \n- Increasing λ increases regularization.  \n- Ridge never eliminates variables, Lasso can.  \n- There’s a sweet spot where RMSE is minimized.\n\n---\n\n## Step 3: Elastic Net (Balancing Ridge and Lasso)\n\nElastic Net introduces α to control the mix between Ridge (α = 0) and Lasso (α = 1).\n\n```{r}\nalpha_grid <- seq(0, 1, by = 0.25)\n\nelastic_results <- map_df(alpha_grid, function(a) {\n  cv_fit <- cv.glmnet(x_train, y_train, alpha = a, nfolds = 10)\n  tibble(\n    alpha = a,\n    best_lambda = cv_fit$lambda.min,\n    best_RMSE = sqrt(min(cv_fit$cvm)),\n    nonzero = sum(abs(coef(cv_fit, s = \"lambda.min\")[-1]) > 0)\n  )\n})\n\nelastic_results\n```\n\n### Visualizing α Effects\n\n```{r}\nggplot(elastic_results, aes(alpha, best_RMSE)) +\n  geom_line() + geom_point(size = 2) +\n  labs(title = \"Elastic Net: Best RMSE vs Alpha\",\n       y = \"Best Cross-validated RMSE\", x = \"Alpha\")\n\nggplot(elastic_results, aes(alpha, nonzero)) +\n  geom_line() + geom_point(size = 2) +\n  labs(title = \"Elastic Net: Model Size vs Alpha\",\n       y = \"Number of Nonzero Coefficients\", x = \"Alpha\")\n```\n\n**Note:**  \nElastic Net combines the strengths of Ridge and Lasso:\n- Ridge for stability.\n- Lasso for sparsity.\n- Often performs best at intermediate α values.\n\n---\n\n## Step 4: Comparing All Models on the Test Set\n\nWe’ll compare Stepwise, Ridge, Lasso, and the best Elastic Net.\n\n```{r}\nridge_pred <- predict(cv_ridge, newx = x_test, s = \"lambda.min\")\nlasso_pred <- predict(cv_lasso, newx = x_test, s = \"lambda.min\")\n\nbest_alpha <- elastic_results %>% arrange(best_RMSE) %>% slice(1) %>% pull(alpha)\ncv_en_best <- cv.glmnet(x_train, y_train, alpha = best_alpha, nfolds = 10)\nelastic_pred <- predict(cv_en_best, newx = x_test, s = \"lambda.min\")\n\ncompare_tbl <- bind_rows(\n  Stepwise = as_tibble_row(postResample(step_pred, test$Sale_Price)),\n  Ridge = as_tibble_row(postResample(ridge_pred, y_test)),\n  Lasso = as_tibble_row(postResample(lasso_pred, y_test)),\n  Elastic = as_tibble_row(postResample(elastic_pred, y_test)),\n  .id = \"Model\"\n)\n\ncolnames(compare_tbl) <- c(\"Model\", \"RMSE\", \"Rsquared\", \"MAE\")\ncompare_tbl <- compare_tbl %>% arrange(RMSE)\ncompare_tbl\n```\n\n---\n\n## Key Takeaways\n\n- Stepwise selection is simple but can lead to unstable models.  \n- Ridge adds stability via coefficient shrinkage.  \n- Lasso enforces sparsity by removing weak predictors.  \n- Elastic Net balances both effects.  \n- Regularization often produces models that generalize better than purely stepwise ones.\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"python":null,"path":"/opt/anaconda3/bin/python","engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"resampling-model-selection.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.25","theme":"cosmo","title":"Model Selection and Regularization - R Version"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"python":null,"path":"/opt/anaconda3/bin/python","engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"lualatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","toc":true,"output-file":"resampling-model-selection.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"block-headings":true,"documentclass":"scrreprt","title":"Model Selection and Regularization - R Version"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}